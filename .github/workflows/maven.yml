jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Octopus Deploy CLI
      uses: OctopusDeploy/install-octocli@v1.1.1
      with:
        version: latest
    - name: Set up JDK 1.17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: adopt
    - name: List Dependencies
      run: mvn --batch-mode dependency:tree --no-transfer-progress > dependencies.txt
      shell: bash
    - name: Collect Dependencies
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies
        path: dependencies.txt
    - name: List Dependency Updates
      run: mvn --batch-mode versions:display-dependency-updates > dependencyUpdates.txt
      shell: bash
    - name: Collect Dependency Updates
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies Updates
        path: dependencyUpdates.txt
    - name: Test
      run: mvn --batch-mode -Dmaven.test.failure.ignore=true test
      shell: bash
    - if: always()
      name: Report
      uses: dorny/test-reporter@v1
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: 'false'
    - name: Package
      run: mvn --batch-mode -DskipTests=true package
      shell: bash
    - id: get_artifact
      name: Get Artifact
      run: echo "::set-output name=artifact::$(find target -type f \( -iname \*.jar
        -o -iname \*.war \) -printf "%p\n" | sort -n | head -1)"
      shell: bash
    - id: get_artifact_name
      name: Get Artifact Name
      run: path="${{ steps.get_artifact.outputs.artifact }}"; echo "::set-output name=artifact::${path##*/}"
      shell: bash
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create_release
      name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: 0.1.${{ github.run_number }}
        release_name: Release 0.1.${{ github.run_number }}
        draft: 'false'
        prerelease: 'false'
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get_artifact.outputs.artifact }}
        asset_name: ${{ steps.get_artifact_name.outputs.artifact }}
        asset_content_type: application/octet-stream
    - name: Push to Octopus
      run: octo push --package "${{ steps.get_artifact.outputs.artifact }}" --server
        ${{ secrets.OCTOPUS_SERVER_URL }} --apiKey ${{ secrets.OCTOPUS_API_TOKEN }}
      shell: bash
    - name: Trigger Octopus Deployment
      run: octo create-release --project "MyProject" --deployTo "Development" --server
        ${{ secrets.OCTOPUS_SERVER_URL }} --apiKey ${{ secrets.OCTOPUS_API_TOKEN }}
      shell: bash
name: Java Maven Build
'on':
  workflow_dispatch: {}
  push: {}
